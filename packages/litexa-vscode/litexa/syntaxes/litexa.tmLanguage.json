{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Litexa",
	"patterns": [
		{
			"include": "#regular_expressions"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#transition"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#state"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#intent"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#language_values"
		},
		{
			"include": "#identifier"
		}
	],
	"repository": {
		"regular_expressions": {
			"patterns": [
				{
					"name": "string.regexp.litexa",
					"match": "\/([a-zA-Z0-9|*+()='<>!:?., ]|-|\\\\|\\\/|(\\[wWdDsSbBtnr*+.?]))+\/[gi]*"
				}
			]
		},
		"variable": {
			"patterns": [
				{
					"name": "variable.language.litexa",
					"match": "[$@]([a-zA-Z_.-]+)"
				}
			]
		},
		"comment": {
			"name": "comment.line.number-sign.litexa",
			"begin": "(\\#)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.comment.litexa"
				}
			},
			"patterns": [],
			"end": "($)"
		},
		"state": {
			"patterns": [
				{
					"name": "markup.underline.litexa",
					"match": "^([a-zA-Z_-][a-zA-Z0-9_.-]+)\\s+$"
				}
			]
		},
		"transition": {
			"patterns": [
				{
					"match": "(->|\\.\\.\\.)\\s*([a-zA-Z_.-]+)",
					"captures": {
						"1": {
							"name": "keyword.control.litexa"
						},
						"2": {
							"name": "markup.underline.litexa"
						}
					}
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.litexa",
					"match": "(=|>|<|>=|<=|==|!=|===|\\|\\||&&|\\+|\\-|\\%|\\(|\\))"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.litexa",
					"match": "\\b(END|LISTEN|card|screen|if|else|otherwise|with|local|wait|reprompt|directive|InputHandler|inputHandlerEvent|stopMusic|metric|stopInputHandler|soundEffect|unless|say|or|when|switch|match|then|log|for|in)\\b"
				},
				{
					"name": "markup.quote.say.litexa",
					"match": "\\b(say)\\b"
				}
			]
		},
		"strings": {
			"name": "string.interpolated.litexa",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"include": "#variable"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric.litexa",
					"match": "[0-9]+"
				},
				{
					"name": "constant.numeric.litexa",
					"match": "[0-9]+\\.[0-9]+"
				}
			]
		},
		"language_values": {
			"patterns": [
				{
					"name": "constant.language.litexa",
					"match": "\\b(true|false|undefined|null)\\b"
				}
			]
		},
		"identifier": {
			"patterns": [
				{
					"name": "variable.parameter.litexa",
					"match": "\\b[a-zA-Z_]([a-zA-Z0-9_.]*)\\b"
				}
			]
		}
	},
	"scopeName": "source.litexa"
}